{% include 'header' %}

#import "{{ prefix }}{{ module_info.name }}ViewController.h"
#import "{{ prefix }}{{ module_info.name }}TableViewCell.h"
#import "{{ prefix }}{{ module_info.name }}ViewOutput.h"
#import "UIFabric.h"
#import "Masonry.h"

@implementation {{ prefix }}{{ module_info.name }}ViewController

#pragma mark - Методы жизненного цикла

- (void)viewDidLoad {
	[super viewDidLoad];

	[self.output didTriggerViewReadyEvent];
}

-(void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    [self.output viewWillApear];   
}

- (void)updateViewConstraints {
    [self.background mas_remakeConstraints:^(MASConstraintMaker *make) {
        make.edges.equalTo(self.view);
    }];
    [super updateViewConstraints];
}

#pragma mark - Методы обработки событий от визуальных элементов
-(void)backBtnTap {
    [self.output backBtnTap];
}

#pragma mark - Вспомогательные функции
- (void) createViewElements {
    
    self.background = [UIFabric imageViewWithImageName:@"background" andContentMode:UIViewContentModeScaleAspectFill iconMode:false andSuperView:self.view];

    UITableView *tv = [[UITableView alloc] init];
    self.tableView = tv;
    [self.view addSubview:tv];
    tv.backgroundColor = [UIColor clearColor];
    tv.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    self.tableManager = [[RETableViewManager alloc] initWithTableView:self.tableView];
    RETableViewSection *dumbSection = [RETableViewSection sectionWithHeaderTitle:@""];
    [self.tableManager addSection:dumbSection];
    self.tableManager[@"{{ prefix }}{{ module_info.name }}CellPresenter"] = @"{{ prefix }}{{ module_info.name }}TableViewCell";
    [self.output setTableViewManager:self.tableManager];
}
#pragma mark - Методы {{ prefix }}{{ module_info.name }}ViewInput

- (void)setupInitialState {
	// В этом методе происходит настройка параметров view, зависящих от ее жизненого цикла (создание элементов, анимации и пр.)
    [self createViewElements];
}



@end
