{% include 'header' %}

#import <XCTest/XCTest.h>
#import <OCMock/OCMock.h>

#import "{{ prefix }}{{ module_info.name }}ViewController_Testable.h"

#import "{{ prefix }}{{ module_info.name }}ViewOutput.h"

@interface {{ prefix }}{{ module_info.name }}ViewControllerTests : XCTestCase

@property (nonatomic, strong) {{ prefix }}{{ module_info.name }}ViewController *controller;

@property (nonatomic, strong) id mockOutput;
@property (nonatomic, strong) id selfMock;

@end

@implementation {{ prefix }}{{ module_info.name }}ViewControllerTests

#pragma mark - Настройка окружения для тестирования

- (void)setUp {
    [super setUp];

    self.controller = [[{{ prefix }}{{ module_info.name }}ViewController alloc] init];

    self.mockOutput = OCMProtocolMock(@protocol({{ prefix }}{{ module_info.name }}ViewOutput));
    self.selfMock = OCMPartialMock(self.controller);

    self.controller.output = self.mockOutput;
}

- (void)tearDown {
    self.controller = nil;

    self.mockOutput = nil;
    self.selfMock = nil;

    [super tearDown];
}

#pragma mark - Тестирование жизненного цикла

- (void)testThatControllerNotifiesPresenterOnDidLoad {
	// given

	// when
	[self.controller viewDidLoad];

	// then
	OCMVerify([self.mockOutput didTriggerViewReadyEvent]);
}


#pragma mark - Тестирование методов MWSMoviesListViewOutput

- (void)testThatControllerNotifiesPresenterOnWillAppear {
    // given
    
    // when
    [self.controller viewWillAppear:NO];
    
    // then
    OCMVerify([self.mockOutput viewWillApear]);
}

- (void)testThatControllerNotifiesPresenterOnBackBtnTap {
    // given
    
    // when
    [self.controller backBtnTap];
    
    // then
    OCMVerify([self.mockOutput backBtnTap]);
}


#pragma mark - Тестирование методов интерфейса

#pragma mark - Тестирование методов {{ prefix }}{{ module_info.name }}ViewInput

- (void)testThatControllerRunsCreateElements {
    // given
    
    // when
    [self.controller setupInitialState];
    
    // then
    OCMVerify([self.selfMock createViewElements]);
}

@end
